name: Java CI
on:
  push:
    branches:
      - '[4-9]+.[0-9]+.x'
  pull_request:
    branches:
      - '[4-9]+.[0-9]+.x'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      WORKSPACE: ${{ github.workspace }}
      GRADLE_OPTS: -Xmx1500m -Dfile.encoding=UTF-8
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'
      - name: Run Build
        if: success()
        id: build
        uses: gradle/gradle-build-action@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
        with:
          arguments: build -Dgeb.env=chromeHeadless
      - name: Upload Distribution
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: grails-gsp-SNAPSHOT
          path: ./**/build/libs/*
  publish:
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'
      - name: Publish to repo.grails.org
        id: publish
        uses: gradle/gradle-build-action@v3
        if: success()
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        with:
          arguments: -Dorg.gradle.internal.publish.checksums.insecure=true publish
  docs:
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'liberica'
          java-version: '17'
      - name: Build Docs
        id: docs
        if: success()
        uses: gradle/gradle-build-action@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_USER }}
          GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY: ${{ secrets.GRADLE_ENTERPRISE_BUILD_CACHE_NODE_KEY }}
        with:
          arguments: docs
      - name: Publish to Github Pages
        if: success()
        uses: grails/github-pages-deploy-action@v2
        env:
          SKIP_SNAPSHOT: true
          TARGET_REPOSITORY: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: build/docs
          DOC_FOLDER: gh-pages
          COMMIT_EMAIL: 'grails-build@users.noreply.github.com'
          COMMIT_NAME: grails-build'
